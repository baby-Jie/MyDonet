<Window x:Class="WpfTest.Views.PathDataSvgTest"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfTest.Views"
        mc:Ignorable="d"
        Title="PathDataSvgTest" Height="450" Width="800">

    <Window.Resources>

        <!--<GeometryGroup x:Key="StopGeometry">
            <Geometry></Geometry>
        </GeometryGroup>-->

        <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF686060"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Geometry x:Key="table">M885 347h-746l-75 -299h895zM213 123l38 187h522l37 -187h-597zM941 11h-858q-8 0 -13.5 -5.5t-5.5 -12.5v-38q0 -8 5.5 -13t13.5 -5h858q8 0 13 5t5 13v38q0 7 -5 12.5t-13 5.5zM730 795q0 15 -11 26t-26 11h-150q-15 0 -26 -11t-11 -26q-15 0 -26 -11t-11 -26v-299q0 -15 11 -26t26 -11h224q15 0 26 11t11 26v299q0 15 -11 26t-26 11zM698 496h-149v224h149v-224zM325 683q-15 0 -26 -11t-11 -26v-299q0 -15 11 -26t26 -11h149q16 0 27 11t11 26h-150v261h150v75h-187z</Geometry>

        <Geometry x:Key="test">M771.4816 199.8848l143.4624-143.4624c21.0944-21.0944 21.0944-55.1936 0-76.1856-21.0944-21.0944-55.1936-21.0944-76.1856 0L695.296 123.6992c-158.5152-118.4768-381.6448-94.4128-511.1808 55.1936s-121.5488 373.8624 18.432 513.8432 364.2368 147.968 513.8432 18.432C865.9968 581.5296 890.0608 358.4 771.4816 199.8848z m-355.9424 172.032H307.6096c-29.7984 0-53.8624 24.1664-53.8624 53.8624 0 29.7984 24.1664 53.8624 53.8624 53.8624h215.4496l0.1024-0.1024h107.7248c29.7984 0 53.8624-24.1664 53.8624-53.8624 0-29.7984-24.1664-53.9648-53.8624-53.9648H523.264l-107.7248 0.2048z m53.8624-215.6544c148.8896 0 269.5168 120.6272 269.5168 269.5168 0 148.8896-120.6272 269.5168-269.5168 269.5168-148.8896 0-269.5168-120.6272-269.5168-269.5168 0-148.7872 120.6272-269.5168 269.5168-269.5168z m0 0</Geometry>

        <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="#01FFFFFF" />
            <!--01FFFFFF-->
            <Setter Property="Foreground" Value="#FFD6D6D6" />
            <Setter Property="Height" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" />
            <Setter Property="MinWidth" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="FontSize" Value="9pt" />
            <Setter Property="Padding" Value="0pt" />
            <Setter Property="Margin" Value="4pt 0pt 4pt 0pt" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="34*"/>
                                <RowDefinition Height="24*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="gd" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,4,0,0">

                                <Path Data="{TemplateBinding Tag}" Stretch="Uniform" Fill="{TemplateBinding Foreground}" 
                                      Width="26" 
                                      Height="26" FlowDirection="RightToLeft">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180"></RotateTransform>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="content"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,-4,0,0" Grid.Row="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding ElementName=content, Path=Content}" Value="{x:Null}">
                                <Setter Property="Grid.RowSpan" Value="2" TargetName="gd">

                                </Setter>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransformOrigin" Value=".5,.5" />
                                <Setter Property="Foreground" Value="#4DA0EA" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX=".98" ScaleY=".98" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransformOrigin" Value=".5,.5" />
                                <Setter Property="Foreground" Value="#4DA0EA" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ColorPenButtonStyle" TargetType="{x:Type Button}" >
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true"
                                Margin="0" Padding="0">
                            <Grid Margin="0">
                                <!--<Ellipse ></Ellipse>-->
                                <Grid Margin="0" >
                                    <Path Fill="Tomato" 
                                  x:Name="_selectedPath"
                                  Visibility="Visible"
                                          
                                          >
                                        <Path.Data>
                                            <GeometryGroup  FillRule="EvenOdd">
                                                <EllipseGeometry RadiusX="16" RadiusY="16" Center="30,30"></EllipseGeometry>
                                                <EllipseGeometry RadiusX="18" RadiusY="18" Center="30,30"></EllipseGeometry>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                    <!--<Ellipse Width="40" Height="40" Fill="White" x:Name="_selectedPath" Visibility="Collapsed"></Ellipse>-->
                                </Grid>
                              
                                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                                <Setter Property="Visibility" Value="Visible" TargetName="_selectedPath"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                                <Setter Property="Visibility" Value="Visible" TargetName="_selectedPath"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Ellipse Width="28" Height="28" Fill="{Binding Path=Content,
                       RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"></Ellipse>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Button Content="#0000ff" Style="{StaticResource ColorPenButtonStyle}" Width="60" Height="60"></Button>
    </Grid>
</Window>
